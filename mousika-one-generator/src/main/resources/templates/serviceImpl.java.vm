package ${package.ServiceImpl};

#foreach($pkg in ${table.importPackages})
#if($pkg.indexOf("BaseServiceImpl") > -1)
import ${pkg};
#end
#end
import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};
import ${package.Service}.${table.serviceName};
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * $!{table.comment} 服务实现类
 *
 * @author ${author}
 * @since ${date}
 */
@Service
@Transactional(rollbackFor = Exception.class)
#if(${kotlin})
open class ${table.serviceImplName} : ${superServiceImplClass}<${table.mapperName}, ${entity}>(), ${table.serviceName} {

}
#else
public class ${table.serviceImplName} extends ${superServiceImplClass}<${table.mapperName}, ${entity}> implements ${table.serviceName} {

    private final static Logger logger = LoggerFactory.getLogger(${table.serviceImplName}.class);
    private ${table.mapperName} ${table.entityPath}Mapper;

    public ${table.serviceImplName}(${table.mapperName} ${table.entityPath}Mapper){
        this.${table.entityPath}Mapper=${table.entityPath}Mapper;
    }

}
#end
